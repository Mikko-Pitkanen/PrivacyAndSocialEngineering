/* This file was generated by the Hex-Rays decompiler version 7.7.0.220218.
   Copyright (c) 2007-2021 Hex-Rays <info@hex-rays.com>

   Detected compiler: GNU C++
*/

#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

__int64 (**init_proc())(void);
void sub_1020();
// int puts(const char *s);
// int printf(const char *format, ...);
// char *fgets(char *s, int n, FILE *stream);
// int strcmp(const char *s1, const char *s2);
// __int64 __isoc99_sscanf(_QWORD, const char *, ...); weak
// __int64 __isoc99_scanf(const char *, ...); weak
void __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void));
void *deregister_tm_clones();
__int64 register_tm_clones();
void *_do_global_dtors_aux();
__int64 __fastcall frame_dummy(); // weak
int __cdecl main(int argc, const char **argv, const char **envp);
__int64 __fastcall sum(__int64 a1);
void term_proc();
// int __fastcall _libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end);
// int __fastcall _cxa_finalize(void *);
// __int64 _gmon_start__(void); weak

//-------------------------------------------------------------------------
// Data declarations

void *_dso_handle = &_dso_handle; // idb
_UNKNOWN _bss_start; // weak
FILE *stdin; // idb
char completed_0; // weak


//----- (0000000000001000) ----------------------------------------------------
__int64 (**init_proc())(void)
{
  __int64 (**result)(void); // rax

  result = &_gmon_start__;
  if ( &_gmon_start__ )
    return (__int64 (**)(void))_gmon_start__();
  return result;
}
// 40B8: using guessed type __int64 _gmon_start__(void);

//----- (0000000000001020) ----------------------------------------------------
void sub_1020()
{
  JUMPOUT(0LL);
}
// 1026: control flows out of bounds to 0

//----- (00000000000010A0) ----------------------------------------------------
// positive sp value has been detected, the output may be wrong!
void __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))
{
  __int64 v3; // rax
  int v4; // esi
  __int64 v5; // [rsp-8h] [rbp-8h] BYREF
  char *retaddr; // [rsp+0h] [rbp+0h] BYREF

  v4 = v5;
  v5 = v3;
  _libc_start_main((int (__fastcall *)(int, char **, char **))main, v4, &retaddr, 0LL, 0LL, a3, &v5);
  __halt();
}
// 10AA: positive sp value 8 has been found
// 10B1: variable 'v3' is possibly undefined

//----- (00000000000010D0) ----------------------------------------------------
void *deregister_tm_clones()
{
  return &_bss_start;
}

//----- (0000000000001100) ----------------------------------------------------
__int64 register_tm_clones()
{
  return 0LL;
}

//----- (0000000000001140) ----------------------------------------------------
void *_do_global_dtors_aux()
{
  void *result; // rax

  if ( !completed_0 )
  {
    if ( &_cxa_finalize )
      _cxa_finalize(_dso_handle);
    result = deregister_tm_clones();
    completed_0 = 1;
  }
  return result;
}
// 4058: using guessed type char completed_0;

//----- (0000000000001190) ----------------------------------------------------
__int64 frame_dummy()
{
  return register_tm_clones();
}
// 1190: using guessed type __int64 __fastcall frame_dummy();

//----- (0000000000001199) ----------------------------------------------------
int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v4; // [rsp+Ch] [rbp-84h]
  int v5; // [rsp+10h] [rbp-80h]
  __int64 v6; // [rsp+18h] [rbp-78h] BYREF
  __int64 v7; // [rsp+20h] [rbp-70h]
  __int64 v8; // [rsp+28h] [rbp-68h]
  char s2[32]; // [rsp+30h] [rbp-60h] BYREF
  char s1[32]; // [rsp+50h] [rbp-40h] BYREF
  char s[24]; // [rsp+70h] [rbp-20h] BYREF
  unsigned __int64 v12; // [rsp+88h] [rbp-8h]

  v12 = __readfsqword(0x28u);
  strcpy(s2, "Vulture35Vulture");
  v8 = 0LL;
  v4 = 0;
  v5 = 0;
  while ( 1 )
  {
    printf("Enter secret passwd: ");
    __isoc99_scanf("%s", s1);
    if ( !strcmp(s1, s2) )
      break;
    puts("Password incorrect ");
  }
  puts("Password correct ");
  while ( 1 )
  {
    while ( !v4 )
    {
      fgets(s, 20, stdin);
      if ( v5 )
      {
        if ( (unsigned int)__isoc99_sscanf(s, "%ld", &v6) == 1 )
        {
          v7 = v6;
          v4 = 1;
        }
        else
        {
          puts("Please enter numbers only ");
        }
      }
      else
      {
        v5 = 1;
        printf("Enter secret Activation Key: ");
      }
    }
    v8 = sum(v7);
    if ( v6 > 59347700 && v6 <= 59347798 && v8 == 44 )
      break;
    puts("Invalid product code ");
    v4 = 0;
  }
  puts("Valid product code ");
  return 0;
}
// 1080: using guessed type __int64 __isoc99_sscanf(_QWORD, const char *, ...);
// 1090: using guessed type __int64 __isoc99_scanf(const char *, ...);

//----- (0000000000001364) ----------------------------------------------------
__int64 __fastcall sum(__int64 a1)
{
  __int64 v3; // [rsp+10h] [rbp-8h]

  v3 = 0LL;
  while ( a1 )
  {
    v3 += a1 % 10;
    a1 /= 10LL;
  }
  return v3;
}

//----- (00000000000013E8) ----------------------------------------------------
void term_proc()
{
  ;
}

// nfuncs=27 queued=10 decompiled=10 lumina nreq=0 worse=0 better=0
// ALL OK, 10 function(s) have been successfully decompiled
